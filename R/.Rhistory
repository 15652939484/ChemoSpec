check4Gaps2 <- function(x, y = NULL, tol = 0.01, plot = FALSE, silent = FALSE, ...) {#
	len.x <- length(x)#
	xdiff <- diff(x)#
	p <- min(xdiff) #
	d1 <- x[1] #
	d1i <- 1L #
	d2 <- c() #
	d2i <- c() #
	for (i in 1:length(xdiff)) {#
		if (!isTRUE(all.equal(xdiff[i], p, tolerance = tol))) { #
			d1 <- c(d1, x[i])#
			d1i <- c(d1i, i)#
			d2 <- c(d2, x[i+1])#
			d2i <- c(d2i, i+1)#
			}	#
		}#
	d2 <- c(d2, x[len.x])#
	d2i <- c(d2i, len.x)#
#
	DF <- data.frame(beg.freq = d1, end.freq = d2, size = NA, beg.indx = d1i, end.indx = d2i)#
	DF$size <- DF$end.freq - DF$beg.freq#
	if ((nrow(DF) == 1) && (!silent)) cat("No gaps were found by check4Gaps\nNo plot will be made\n")#
	if ((nrow(DF) > 1) && (plot)) {#
		if (missing(y)) stop("No y values provided; cannot plot!")#
		plot(x, y, type = "l", col = "black", main = "Gaps in Frequency Data",#
			ylab = "", xlab = "marked regions are skipped in data set", ...)#
		ybottom <- min(y) - 0.1 * diff(range(y))#
		ytop <- max(y) + 0.1* diff(range(y)) #
		for (n in 1:(nrow(DF)-1)){#
			lines(x = c(DF[n,2], DF[n+1,1]), y = c(y[DF[n,5]], y[DF[n+1,4]]), lty = 2, col = "white")#
			rect(xleft = DF[n,2], ybottom, xright = DF[n+1,1], ytop, density = 15, col = "pink")#
			}#
		}#
#
	if (nrow(DF) == 1)  DF <- FALSE#
#
	DF#
	}
x <- seq(from = 5, to = 12, by = 0.1)
remove <- c(8:11, 40:45); x <- x[-remove]
gaps <- check4Gaps2(x, y = 1:length(x))
check4Gaps2 <- function(x, y = NULL, tol = 0.01, plot = FALSE, silent = FALSE, ...) {#
	len.x <- length(x)#
	xdiff <- diff(x)#
	p <- min(xdiff) #
	d1 <- x[1] #
	d1i <- 1L #
	d2 <- c() #
	d2i <- c() #
	for (i in 1:length(xdiff)) {#
		if (!isTRUE(all.equal(xdiff[i], p, tolerance = tol))) { #
			d1 <- c(d1, x[i])#
			d1i <- c(d1i, i)#
			d2 <- c(d2, x[i])#
			d2i <- c(d2i, i+1)#
			}	#
		}#
	d2 <- c(d2, x[len.x])#
	d2i <- c(d2i, len.x)#
#
	DF <- data.frame(beg.freq = d1, end.freq = d2, size = NA, beg.indx = d1i, end.indx = d2i)#
	DF$size <- DF$end.freq - DF$beg.freq#
	if ((nrow(DF) == 1) && (!silent)) cat("No gaps were found by check4Gaps\nNo plot will be made\n")#
	if ((nrow(DF) > 1) && (plot)) {#
		if (missing(y)) stop("No y values provided; cannot plot!")#
		plot(x, y, type = "l", col = "black", main = "Gaps in Frequency Data",#
			ylab = "", xlab = "marked regions are skipped in data set", ...)#
		ybottom <- min(y) - 0.1 * diff(range(y))#
		ytop <- max(y) + 0.1* diff(range(y)) #
		for (n in 1:(nrow(DF)-1)){#
			lines(x = c(DF[n,2], DF[n+1,1]), y = c(y[DF[n,5]], y[DF[n+1,4]]), lty = 2, col = "white")#
			rect(xleft = DF[n,2], ybottom, xright = DF[n+1,1], ytop, density = 15, col = "pink")#
			}#
		}#
#
	if (nrow(DF) == 1)  DF <- FALSE#
#
	DF#
	}
x
check4Gaps2 <- function(x, y = NULL, tol = 0.01, plot = FALSE, silent = FALSE, ...) {#
	len.x <- length(x)#
	xdiff <- diff(x)#
	p <- min(xdiff) #
	d1 <- x[1] #
	d1i <- 1L #
	d2 <- c() #
	d2i <- c() #
	for (i in 1:length(xdiff)) {#
		if (!isTRUE(all.equal(xdiff[i], p, tolerance = tol))) { #
			d1 <- c(d1, x[i+1])#
			d1i <- c(d1i, i)#
			d2 <- c(d2, x[i])#
			d2i <- c(d2i, i+1)#
			}	#
		}#
	d2 <- c(d2, x[len.x])#
	d2i <- c(d2i, len.x)#
#
	DF <- data.frame(beg.freq = d1, end.freq = d2, size = NA, beg.indx = d1i, end.indx = d2i)#
	DF$size <- DF$end.freq - DF$beg.freq#
	if ((nrow(DF) == 1) && (!silent)) cat("No gaps were found by check4Gaps\nNo plot will be made\n")#
	if ((nrow(DF) > 1) && (plot)) {#
		if (missing(y)) stop("No y values provided; cannot plot!")#
		plot(x, y, type = "l", col = "black", main = "Gaps in Frequency Data",#
			ylab = "", xlab = "marked regions are skipped in data set", ...)#
		ybottom <- min(y) - 0.1 * diff(range(y))#
		ytop <- max(y) + 0.1* diff(range(y)) #
		for (n in 1:(nrow(DF)-1)){#
			lines(x = c(DF[n,2], DF[n+1,1]), y = c(y[DF[n,5]], y[DF[n+1,4]]), lty = 2, col = "white")#
			rect(xleft = DF[n,2], ybottom, xright = DF[n+1,1], ytop, density = 15, col = "pink")#
			}#
		}#
#
	if (nrow(DF) == 1)  DF <- FALSE#
#
	DF#
	}
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.12)
6.1-5.6
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.7)
9.5-8.8
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.6)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.5)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.4)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.1)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.09)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.05)
gaps <- check4Gaps2(x, y = 1:length(x), plot = TRUE, tol = 0.0005)
diff(x)
tst <- check4Gaps(metMUD1$freq)
tst
chkSpectra(metMUD1)
chkSpectra(metMUD1, confirm = TRUE)
data(metMUD1)
check4Gaps(metMUD1$freq)
?diff
diff(10:1)
?check4Gaps
x <- seq(from = 5, to = 12, by = 0.1)#
remove <- c(8:11, 40:45); x <- x[-remove]#
gaps <- check4Gaps(x)
gaps
data(SrE.IR)#
newIR <- removeFreq(SrE.IR, rem.freq = SrE.IR$freq > 1800 & SrE.IR$freq < 2500)#
check4Gaps(newIR$freq, newIR$data[1,], plot = TRUE)
unique(diff(newIR$freq))
sumSpectra(newIR, tol = 1.9)
sumSpectra(newIR, tol = 0.5)
sumSpectra(newIR, tol = 0.6)
sumSpectra(newIR, tol = 0.7)
sumSpectra(newIR, tol = 0.8)
sumSpectra(newIR, tol = 1)
sumSpectra(newIR, tol = 0.9)
?all.equal
library("ChemoSpec")
?sumSpectra
data(metMUD1)#
sumSpectra(metMUD1)
?removeFreq
data(SrE.IR)#
sumSpectra(SrE.IR)
newIR <- removeFreq(SrE.IR, rem.freq = SrE.IR$freq > 800#
  & SrE.IR$freq < 1000)
sumSpectra(newIR)
check4Gaps(newIR$freq, newIR$data[1,], plot = TRUE)
?tempdir
