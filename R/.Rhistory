library("ChemoSpec")
plotScree <-#
function(pca, title = "no title provided", ...) {#
	if (missing(pca)) stop("No PCA results provided")#
	if (!("princomp" %in% class(pca) || "prcomp" %in% class(pca))) stop("Your pca results look corrupt!")#
	eigensum <- sum(pca$sdev*pca$sdev)#
	variance <- 100*(pca$sdev*pca$sdev/eigensum)#
	cumvariance <- variance  #
	for (n in c(1:length(variance))) {cumvariance[n] <- sum(variance[1:n])}#
#
	title <- paste(title, ": Scree Plot", sep = "")#
#
	ncp <- length(variance)#
	if (ncp > 10) ncp <- 10#
	plot(c(1:ncp), variance[1:ncp], type = "l", col = "red", main = title, xlab = "factor", ylab = "percent", ylim = c(0,100))#
	axis(1, at = c(1:ncp), labels = TRUE)#
	points(c(1:ncp), cumvariance[1:ncp], type="l", col="blue")#
	abline(v = c(1:ncp), h = c(0,10,20,30,40,50,60,70,80,90,100), col = "lightgray")#
	abline(h = 95, lty = "dashed")#
	legend("bottomleft", y = NULL, pca$method, bty = "n", cex = 0.75)#
	legend("topright", y=NULL, "cumulative percent", lty = 1, bty = "n", inset = c(0, 0.40), col = "blue", cex = 0.75)#
	legend("topright",y = NULL, " individual percent", lty = 1, bty = "n", inset = c(0, 0.50), col = "red", cex = 0.75)#
	}
assignInNamespace("plotScree", plotScree, pos = "package:ChemoSpec")
library("R.utils")
xp <- loadObject("~/Desktop/Xiaoyan/XP.RData")
sumSpectra(xp)
normSpectra <-#
function(spectra, method = "TotInt", RangeExpress = NULL) {#
	if (missing(spectra)) stop("No spectral data provided")#
	chkSpectra(spectra)#
	if (method == "TotInt") {#
		for (n in 1:length(spectra$names)) {#
			S <- sum(as.numeric(spectra$data[n,]))#
			spectra$data[n,] <- spectra$data[n,]/S#
			}#
		}#
	if (method == "Range") {#
		if (is.null(RangeExpress)) stop("No range expression given")#
		rfi <- which(RangeExpress)#
		for (n in 1:length(spectra$names)) {#
			S <- sum(as.numeric(spectra$data[n,rfi]))#
			spectra$data[n,] <- spectra$data[n,]/S#
			}#
		}#
#
	chkSpectra(spectra)#
	spectra#
	}
assignInNamespace("normSpectra", normSpectra, pos = "package:ChemoSpec")
xpn <- normSpectra(xp)#
class <- classPCA(xpn, choice = "noscale")
plotScores(xp, class, title = "XP test data")
plotScree(class, title = "XP test data")
plotScree2 <-#
function(pca, title = "no title provided", ...) {#
	if (missing(pca)) stop("No PCA results provided")#
	if (!("princomp" %in% class(pca) || "prcomp" %in% class(pca))) stop("Your pca results look corrupt!")#
	eigensum <- sum(pca$sdev*pca$sdev)#
	variance <- 100*(pca$sdev*pca$sdev/eigensum)#
	cumvariance <- variance  #
	for (n in c(1:length(variance))) {cumvariance[n] <- sum(variance[1:n])}#
	title <- bquote(bold(.(eval(title)) ~':'~Scores~by~PC))#
#
	ncp <- length(variance)#
	if (ncp > 10) ncp <- 10#
#
	plot(rep(1:ncp, each = nrow(pca$x)), as.vector(pca$x[,1:ncp]), type = "p",#
		col = "red", main = title, xlab = "component", ylab = "scores",#
		xlim = c(1, 10.5), cex = 0.5, xaxt = "n")#
	axis(1, at = c(1:ncp), labels = TRUE)#
	lab.txt <- paste(round(cumvariance[1:ncp], 0), "%", sep = "")#
	y.pos <- apply(pca$x[,1:ncp], MARGIN = 2, FUN = range)#
	y.pos <- y.pos[2,]#
	y.max <- max(y.pos)#
	off <- 0.1 * y.max#
	text(c(1:ncp) + 0.35, off, labels = lab.txt, cex = 0.75)#
	abline(h = 0, lty = "dashed", col = "gray")#
#
	legend("bottomright", y = NULL, pca$method, bty = "n", cex = 0.75)#
	legend("topright", y = NULL, "cumulative percent variance shown to right of PC", bty = "n", cex = 0.75)#
	}
plotScree(class2, title = "XP test data")
plotScree2 <-#
function(pca, title = "no title provided", ...) {#
	if (missing(pca)) stop("No PCA results provided")#
	if (!("princomp" %in% class(pca) || "prcomp" %in% class(pca))) stop("Your pca results look corrupt!")#
	eigensum <- sum(pca$sdev*pca$sdev)#
	variance <- 100*(pca$sdev*pca$sdev/eigensum)#
	cumvariance <- variance  #
	for (n in c(1:length(variance))) {cumvariance[n] <- sum(variance[1:n])}#
	title <- bquote(bold(.(eval(title)) ~':'~Scores~by~PC))#
#
	ncp <- length(variance)#
	if (ncp > 10) ncp <- 10#
#
	plot(rep(1:ncp, each = nrow(pca$x)), as.vector(pca$x[,1:ncp]), type = "p",#
		col = "red", main = title, xlab = "component", ylab = "scores",#
		xlim = c(1, ncp+0.5), cex = 0.5, xaxt = "n")#
	axis(1, at = c(1:ncp), labels = TRUE)#
	lab.txt <- paste(round(cumvariance[1:ncp], 0), "%", sep = "")#
	y.pos <- apply(pca$x[,1:ncp], MARGIN = 2, FUN = range)#
	y.pos <- y.pos[2,]#
	y.max <- max(y.pos)#
	off <- 0.1 * y.max#
	text(c(1:ncp) + 0.35, off, labels = lab.txt, cex = 0.75)#
	abline(h = 0, lty = "dashed", col = "gray")#
#
	legend("bottomright", y = NULL, pca$method, bty = "n", cex = 0.75)#
	legend("topright", y = NULL, "cumulative percent variance shown to right of PC", bty = "n", cex = 0.75)#
	}
assignInNamespace("plotScree2", plotScree2, pos = "package:ChemoSpec")
plotScree2(class, title = "XP test data")
?sPlotSpectra
data(CuticleIR)#
IR.pca <- classPCA(CuticleIR)#
splot <- sPlotSpectra(spectra = CuticleIR, pca = IR.pca, pc = 1, tol = 0.005,#
title = "Serenoa repens IR")
?hmapSpectra
?bquote
library("plyr")
?arrange
0.75*6
