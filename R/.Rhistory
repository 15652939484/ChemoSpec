?legend
?plotScores
data(SrE.IR)#
results <- classPCA(SrE.IR, choice = "noscale")#
myt <- expression(bolditalic(Serenoa)~bolditalic(repens)~bold(IR~Spectra))#
plotScores(SrE.IR, main = myt, results,#
	pcs = c(1,2), ellipse = "rob", tol = 0.05)
data(SrE.IR)#
results <- classPCA(SrE.IR, choice = "noscale")#
myt <- expression(bolditalic(Serenoa)~bolditalic(repens)~bold(IR~Spectra))#
plotScores(SrE.IR, main = myt, results,#
	pcs = c(1,2), ellipse = "rob", tol = 0.05, leg.loc = "none")
data(SrE.IR)#
results <- classPCA(SrE.IR, choice = "noscale")#
myt <- expression(bolditalic(Serenoa)~bolditalic(repens)~bold(IR~Spectra))#
plotScores(SrE.IR, main = myt, results,#
	pcs = c(1,2), ellipse = "rob", tol = 0.05, leg.loc = "bottomleft")
findFn("column medians")
?colMeans
?median
data(SrE.NMR)
M <- apply(SrE.NMR$data, 2, median)
S <- normSpectra(SrE.NMR)
S <- normSpectra(SrE.NMR)$data
str(S/M)
tst <- S/M
tst[,1]
S[,1]/M
summary(M2)
?apply
spectra <- SrE.NMR
M <- apply(spectra$data, 2, median)
S <- normSpectra(spectra, method = "TotInt")$data
M <- apply(S, 2, median)
str(M)
hist(M)
for (i in 1:nrow(S)) S[i,] <- S[i,]/M
M2 <- apply(S, 1, median)
str(M2)
hist(M2)
for (i in 1:nrow(S)) S[i,] <- S[i,]/M2[i]
str(S)
range(S)
?cutree
ls()
data(SrE.IR)
evalClusters <-#
function(spectra, hclst,  k = NULL, h = NULL, crit = "all") {#
	ct <- cutree(hclst, k = k, h = h)#
	res <- intCriteria(spectra$data, ct, crit)#
	return(res)#
	}
tst <- evalClusters(SrE.IR, hca, h = 0.3)
library("ChemoSpec")
hca <- hcaSpectra(SrE.IR)
str(hca)
hca
?list
